{"version":3,"sources":["../../../api/server/controllers/ContactController.js"],"names":["util","Util","ContactController","req","res","ContactService","getAllContacts","allContacts","length","setSuccess","send","setError","body","firstname","lastname","newContact","addContact","createdContact","message","alteredContact","id","params","Number","updateContact","getAContact","theContact","deleteContact","contactToDelete","module","exports"],"mappings":";;;;;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,IAAI,GAAG,IAAIC,gBAAJ,EAAb;;IAEMC,iB;;;;;;;;2HAC0BC,G,EAAKC,G;;;;;;;;uBAECC,2BAAeC,cAAf,E;;;AAApBC,gBAAAA,W;;AACN,oBAAIA,WAAW,CAACC,MAAZ,GAAqB,CAAzB,EAA4B;AACxBR,kBAAAA,IAAI,CAACS,UAAL,CAAgB,GAAhB,EAAqB,oBAArB,EAA2CF,WAA3C;AACH,iBAFD,MAEO;AACHP,kBAAAA,IAAI,CAACS,UAAL,CAAgB,GAAhB,EAAqB,mBAArB;AACH;;iDACMT,IAAI,CAACU,IAAL,CAAUN,GAAV,C;;;;;AAEPJ,gBAAAA,IAAI,CAACW,QAAL,CAAc,GAAd;iDACOX,IAAI,CAACU,IAAL,CAAUN,GAAV,C;;;;;;;;;;;;;;;;;;;wHAISD,G,EAAKC,G;;;;;;sBACrB,CAACD,GAAG,CAACS,IAAJ,CAASC,SAAV,IAAuB,CAACV,GAAG,CAACS,IAAJ,CAASE,Q;;;;;AACnCd,gBAAAA,IAAI,CAACW,QAAL,CAAc,GAAd,EAAmB,iCAAnB;kDACOX,IAAI,CAACU,IAAL,CAAUN,GAAV,C;;;AAEHW,gBAAAA,U,GAAaZ,GAAG,CAACS,I;;;uBAEQP,2BAAeW,UAAf,CAA0BD,UAA1B,C;;;AAAvBE,gBAAAA,c;AACNjB,gBAAAA,IAAI,CAACS,UAAL,CAAgB,GAAhB,EAAqB,gBAArB,EAAuCQ,cAAvC;kDACOjB,IAAI,CAACU,IAAL,CAAUN,GAAV,C;;;;;AAEPJ,gBAAAA,IAAI,CAACW,QAAL,CAAc,GAAd,EAAmB,aAAMO,OAAzB;kDACOlB,IAAI,CAACU,IAAL,CAAUN,GAAV,C;;;;;;;;;;;;;;;;;;;4HAIeD,G,EAAKC,G;;;;;;AACvBe,gBAAAA,c,GAAiBhB,GAAG,CAACS,I;AACnBQ,gBAAAA,E,GAAOjB,GAAG,CAACkB,M,CAAXD,E;;oBACHE,MAAM,CAACF,EAAD,C;;;;;AACPpB,gBAAAA,IAAI,CAACW,QAAL,CAAc,GAAd,EAAmB,oCAAnB;kDACOX,IAAI,CAACU,IAAL,CAAUN,GAAV,C;;;;;uBAGqBC,2BAAekB,aAAf,CAA6BH,EAA7B,EAAiCD,cAAjC,C;;;AAAtBI,gBAAAA,a;;AACN,oBAAG,CAACA,aAAJ,EAAmB;AACfvB,kBAAAA,IAAI,CAACW,QAAL,CAAc,GAAd,4CAAsDS,EAAtD;AACH,iBAFD,MAEO;AACHpB,kBAAAA,IAAI,CAACS,UAAL,CAAgB,GAAhB,EAAqB,iBAArB,EAAwCc,aAAxC;AACH;;kDACMvB,IAAI,CAACU,IAAL,CAAUN,GAAV,C;;;;;AAEPJ,gBAAAA,IAAI,CAACW,QAAL,CAAc,GAAd;kDACOX,IAAI,CAACU,IAAL,CAAUN,GAAV,C;;;;;;;;;;;;;;;;;;;yHAIUD,G,EAAKC,G;;;;;;AAClBgB,gBAAAA,E,GAAOjB,GAAG,CAACkB,M,CAAXD,E;;oBAEJE,MAAM,CAACF,EAAD,C;;;;;AACNpB,gBAAAA,IAAI,CAACW,QAAL,CAAc,GAAd,EAAmB,oCAAnB;kDACOX,IAAI,CAACU,IAAL,CAAUN,GAAV,C;;;;;uBAIkBC,2BAAemB,WAAf,CAA2BJ,EAA3B,C;;;AAAnBK,gBAAAA,U;;AAEN,oBAAG,CAACA,UAAJ,EAAgB;AACZzB,kBAAAA,IAAI,CAACW,QAAL,CAAc,GAAd,4CAAsDS,EAAtD;AACH,iBAFD,MAEO;AACHpB,kBAAAA,IAAI,CAACS,UAAL,CAAgB,GAAhB,EAAqB,eAArB,EAAsCgB,UAAtC;AACH;;kDACMzB,IAAI,CAACU,IAAL,CAAUN,GAAV,C;;;;;AAEPJ,gBAAAA,IAAI,CAACW,QAAL,CAAc,GAAd;kDACOX,IAAI,CAACU,IAAL,CAAUN,GAAV,C;;;;;;;;;;;;;;;;;;;2HAIYD,G,EAAKC,G;;;;;;AACpBgB,gBAAAA,E,GAAOjB,GAAG,CAACkB,M,CAAXD,E;;oBAEJE,MAAM,CAACF,EAAD,C;;;;;AACNpB,gBAAAA,IAAI,CAACW,QAAL,CAAc,GAAd,EAAmB,gCAAnB;kDACOX,IAAI,CAACU,IAAL,CAAUN,GAAV,C;;;;;uBAIuBC,2BAAeqB,aAAf,CAA6BN,EAA7B,C;;;AAAxBO,gBAAAA,e;;AAEN,oBAAIA,eAAJ,EAAqB;AACjB3B,kBAAAA,IAAI,CAACS,UAAL,CAAgB,GAAhB,EAAqB,iBAArB;AACH,iBAFD,MAEO;AACHT,kBAAAA,IAAI,CAACW,QAAL,CAAc,GAAd,gCAA0CS,EAA1C;AACH;;kDACMpB,IAAI,CAACU,IAAL,CAAUN,GAAV,C;;;;;AAEPJ,gBAAAA,IAAI,CAACW,QAAL,CAAc,GAAd;kDACOX,IAAI,CAACU,IAAL,CAAUN,GAAV,C;;;;;;;;;;;;;;;;;;;;AAKnBwB,MAAM,CAACC,OAAP,GAAiB3B,iBAAjB","sourcesContent":["import ContactService from '../services/ContactService';\nimport Util from '../utils/Util';\n\nconst util = new Util();\n\nclass ContactController {\n    static async getAllContacts(req, res) {\n        try {\n            const allContacts = await ContactService.getAllContacts();\n            if (allContacts.length > 0) {\n                util.setSuccess(200, 'Contacts retrieved', allContacts);\n            } else {\n                util.setSuccess(200, 'No contacts found');\n            }\n            return util.send(res);\n        } catch (error) {\n            util.setError(400, error);\n            return util.send(res);\n        }\n    }\n\n    static async addContact(req, res) {\n        if (!req.body.firstname || !req.body.lastname) {\n          util.setError(400, 'Please provide complete details');\n          return util.send(res);\n        }\n        const newContact = req.body;\n        try {\n          const createdContact = await ContactService.addContact(newContact);\n          util.setSuccess(201, 'Contact Added!', createdContact);\n          return util.send(res);\n        } catch (error) {\n          util.setError(400, error.message);\n          return util.send(res);\n        }\n      }\n\n    static async updatedContact(req, res) {\n        const alteredContact = req.body;\n        const { id } = req.params;\n        if (!Number(id)) {\n            util.setError(400, 'Please input a valid numeric value');\n            return util.send(res);\n        }\n        try {\n            const updateContact = await ContactService.updateContact(id, alteredContact);\n            if(!updateContact) {\n                util.setError(404, `Cannot find contact with the id ${id}`);\n            } else {\n                util.setSuccess(200, 'Contact Updated', updateContact);\n            }\n            return util.send(res);\n        } catch (error) {\n            util.setError(404, error);\n            return util.send(res);\n        }\n    }\n\n    static async getAContact(req, res) {\n        const { id } = req.params;\n\n        if(!Number(id)) {\n            util.setError(400, 'Please input a valid numeric value');\n            return util.send(res);\n        }\n\n        try {\n            const theContact = await ContactService.getAContact(id);\n\n            if(!theContact) {\n                util.setError(404, `Cannot find contact with the id ${id}`);\n            } else {\n                util.setSuccess(200, 'Found Contact', theContact);\n            }\n            return util.send(res);\n        } catch (error) {\n            util.setError(404, error);\n            return util.send(res);\n        }\n    }\n\n    static async deleteContact(req, res) {\n        const { id } = req.params;\n\n        if(!Number(id)) {\n            util.setError(400, 'Please provide a numeric value');\n            return util.send(res);\n        }\n\n        try {\n            const contactToDelete = await ContactService.deleteContact(id);\n\n            if (contactToDelete) {\n                util.setSuccess(200, 'Contact Deleted');\n            } else {\n                util.setError(404, `Contact with the id ${id} cannot be found`);\n            }\n            return util.send(res);\n        } catch (error) {\n            util.setError(400, error);\n            return util.send(res);\n        }\n    }\n}\n\nmodule.exports = ContactController;"],"file":"ContactController.js"}