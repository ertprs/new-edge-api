{"version":3,"sources":["../../../api/server/services/ContactService.js"],"names":["ContactService","database","Contact","findAll","newContact","create","id","updateContact","findOne","where","Number","contactToUpdate","update","theContact","contactToDelete","destroy","deletedContact"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;IAEMA,c;;;;;;;;;;;;;;;uBAGmBC,mBAASC,OAAT,CAAiBC,OAAjB,E;;;;;;;;;;;;;;;;;;;;;;;;;;;wHAMGC,U;;;;;;;uBAEHH,mBAASC,OAAT,CAAiBG,MAAjB,CAAwBD,UAAxB,C;;;;;;;;;;;;;;;;;;;;;;;;;;;4HAMME,E,EAAIC,c;;;;;;;;uBAEON,mBAASC,OAAT,CAAiBM,OAAjB,CAAyB;AACnDC,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AAD4C,iBAAzB,C;;;AAAxBK,gBAAAA,e;;qBAIFA,e;;;;;;uBACMV,mBAASC,OAAT,CAAiBU,MAAjB,CAAwBL,cAAxB,EAAuC;AAAEE,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AAAT,iBAAvC,C;;;kDAECC,c;;;kDAEJ,I;;;;;;;;;;;;;;;;;;;;;;;;yHAMUD,E;;;;;;;;uBAEQL,mBAASC,OAAT,CAAiBM,OAAjB,CAAyB;AAC9CC,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AADuC,iBAAzB,C;;;AAAnBO,gBAAAA,U;kDAICA,U;;;;;;;;;;;;;;;;;;;;;;;;2HAMYP,E;;;;;;;;uBAEWL,mBAASC,OAAT,CAAiBM,OAAjB,CAAyB;AAAEC,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AAAT,iBAAzB,C;;;AAAxBQ,gBAAAA,e;;qBAEFA,e;;;;;;uBAC6Bb,mBAASC,OAAT,CAAiBa,OAAjB,CAAyB;AAClDN,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AAD2C,iBAAzB,C;;;AAAvBU,gBAAAA,c;kDAGCA,c;;;kDAEJ,I;;;;;;;;;;;;;;;;;;;;;;;;;eAOJhB,c","sourcesContent":["import database from '../src/models';\n\nclass ContactService {\n    static async getAllContacts() {\n        try {\n            return await database.Contact.findAll();\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    static async addContact(newContact) {\n        try {\n            return await database.Contact.create(newContact);\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    static async updateContact(id, updateContact) {\n        try {\n            const contactToUpdate = await database.Contact.findOne({\n                where: { id: Number(id) }\n            });\n\n            if (contactToUpdate) {\n                await database.Contact.update(updateContact, { where: { id: Number(id) } });\n\n                return updateContact;\n            }\n            return null;\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    static async getAContact(id) {\n        try {\n            const theContact = await database.Contact.findOne({\n                where: { id: Number(id) }\n            });\n\n            return theContact;\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    static async deleteContact(id) {\n        try {\n            const contactToDelete = await database.Contact.findOne({ where: { id: Number(id) } });\n\n            if (contactToDelete) {\n                const deletedContact = await database.Contact.destroy({\n                    where: { id: Number(id) }\n                });\n                return deletedContact;\n            }\n            return null;\n        } catch (error) {\n            throw error;\n        }\n    }\n}\n\nexport default ContactService;"],"file":"ContactService.js"}